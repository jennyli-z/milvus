name: Code Checker
# TODO: do not trigger action for some document file update

# This workflow is triggered on pushes or pull request to the repository.
on:
  issue_comment:
    types: [created]
  pull_request:
    # file paths to consider in the event. Optional; defaults to all.
    paths:
      - 'scripts/**'
      - 'internal/**'
      - 'cmd/**'
      - 'build/**'
      - '.github/workflows/code-checker.yaml'
      - '.env'
      - docker-compose.yml
      - Makefile
      - '!**.md'
      - '!build/ci/jenkins/**'
      # FIXME(wxyu): not need to run code check, update the ci-passed rules and remove these two lines
      - go.mod
      - go.sum

jobs:
  ubuntu:
    # if:  "github.event_name == 'pull_request' || (github.event_name == 'issue_comment'&& startsWith(github.event.comment.body, '/run-checks'))"
    name: Code Checker AMD64 Ubuntu ${{ matrix.ubuntu }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        ubuntu: [18.04]
    env:
      UBUNTU: ${{ matrix.ubuntu }}
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/run-checks'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: Github API Request
        id: create_check_run
        uses: octokit/request-action@v2.1.0
        with:
          route:  POST /repos/{owner}/{repo}/check-runs
          owner: milvus-io
          repo: milvus
          name: "Test check run"
          head_sha: ${{ github.sha }}
          output: | # The | is significant!
            title: Test check run title
            summary: A summary of the test check run
            images:
              - alt: Test image
                image_url: https://octodex.github.com/images/jetpacktocat.png
        env:
          GITHUB_TOKEN: ${{ secrets.RERUN_BOT_TOKEN }}
      - name: Get PR informations
        if: steps.check.outputs.triggered == 'true'
        id: pr_data
        run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).base.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).base.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).base.repo.ssh_url }}"
      - name: clone branch of PR
        if: steps.check.outputs.triggered == 'true'
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ steps.pr_data.outputs.branch }}
      - name: Checkout
        if: "github.event_name == 'pull_request'"
        uses: actions/checkout@v2
      - name: Cache CCache Volumes
        uses: actions/cache@v1
        with:
          path: .docker/amd64-ubuntu${{ matrix.ubuntu }}-ccache
          key: ubuntu${{ matrix.ubuntu }}-ccache-${{ hashFiles('internal/core/**') }}
          restore-keys: ubuntu${{ matrix.ubuntu }}-ccache-
      - name: Cache Go Mod Volumes
        uses: actions/cache@v1
        with:
          path: .docker/amd64-ubuntu${{ matrix.ubuntu }}-go-mod
          key: ubuntu${{ matrix.ubuntu }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: ubuntu${{ matrix.ubuntu }}-go-mod-
      - name: Code Check
        env:
          CHECK_BUILDER: "1"
        run: |
          ./build/builder.sh /bin/bash -c "make check-proto-product && make verifiers"
      # Update check run to completed, successful status
      - uses: octokit/request-action@v2.x
        id: update_check_run
        with:
          route: PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}
          owner: milvus-io
          repo: milvus
          check_run_id: ${{ fromJson(steps.create_check_run.outputs.data).id }}
          conclusion: "success"
          status: "completed"
        env:
          GITHUB_TOKEN: ${{ secrets.RERUN_BOT_TOKEN }}