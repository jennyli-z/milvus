name: Debug UT
on:
  push:
  workflow_dispatch:
jobs:
  ubuntu:
    name: Build and test AMD64 Ubuntu ${{ matrix.ubuntu }}
    runs-on: ubuntu-${{ matrix.ubuntu }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        ubuntu: [18.04]
    env:
      UBUNTU: ${{ matrix.ubuntu }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache CCache Volumes
        uses: actions/cache@v1
        with:
          path: .docker/amd64-ubuntu${{ matrix.ubuntu }}-ccache
          key: ubuntu${{ matrix.ubuntu }}-ccache-${{ hashFiles('internal/core/**') }}
          restore-keys: ubuntu${{ matrix.ubuntu }}-ccache-
      - name: Cache Go Mod Volumes
        uses: actions/cache@v1
        with:
          path: .docker/amd64-ubuntu${{ matrix.ubuntu }}-go-mod
          key: ubuntu${{ matrix.ubuntu }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: ubuntu${{ matrix.ubuntu }}-go-mod-
      - uses: shaowenchen/debugger-action@v2
        name: debugger
        timeout-minutes: 30
        continue-on-error: true
        with:
          ngrok_token: ${{ secrets.NGROK_TOKEN }}  
      - name: Start Service
        shell: bash
        run: |
          docker-compose up -d pulsar etcd minio
      - name: Build and UnitTest
        env:
          CHECK_BUILDER: "1"
        run: |
          ./build/builder.sh /bin/bash -c "make check-proto-product && make codecov"
      - name: Upload coverage to Codecov
        if: "github.repository == 'milvus-io/milvus'"
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./go_coverage.txt,./lcov_output.info
          name: ubuntu-${{ matrix.ubuntu }}-unittests
          fail_ci_if_error: true

